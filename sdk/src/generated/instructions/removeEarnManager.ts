/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */

import * as web3 from '@solana/web3.js'
import * as beetSolana from '@metaplex-foundation/beet-solana'
import * as beet from '@metaplex-foundation/beet'
import { ProofElement, proofElementBeet } from '../types/ProofElement'

/**
 * @category Instructions
 * @category RemoveEarnManager
 * @category generated
 */
export type RemoveEarnManagerInstructionArgs = {
  earnManager: web3.PublicKey
  proofs: ProofElement[][]
  neighbors: number[] /* size: 32 */[]
}
/**
 * @category Instructions
 * @category RemoveEarnManager
 * @category generated
 */
export const removeEarnManagerStruct = new beet.FixableBeetArgsStruct<
  RemoveEarnManagerInstructionArgs & {
    instructionDiscriminator: number[] /* size: 8 */
  }
>(
  [
    ['instructionDiscriminator', beet.uniformFixedSizeArray(beet.u8, 8)],
    ['earnManager', beetSolana.publicKey],
    ['proofs', beet.array(beet.array(proofElementBeet))],
    ['neighbors', beet.array(beet.uniformFixedSizeArray(beet.u8, 32))],
  ],
  'RemoveEarnManagerInstructionArgs'
)
/**
 * Accounts required by the _removeEarnManager_ instruction
 *
 * @property [**signer**] signer
 * @property [] globalAccount
 * @property [_writable_] earnManagerAccount
 * @category Instructions
 * @category RemoveEarnManager
 * @category generated
 */
export type RemoveEarnManagerInstructionAccounts = {
  signer: web3.PublicKey
  globalAccount: web3.PublicKey
  earnManagerAccount: web3.PublicKey
  anchorRemainingAccounts?: web3.AccountMeta[]
}

export const removeEarnManagerInstructionDiscriminator = [
  121, 207, 141, 182, 239, 154, 85, 152,
]

/**
 * Creates a _RemoveEarnManager_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category RemoveEarnManager
 * @category generated
 */
export function createRemoveEarnManagerInstruction(
  accounts: RemoveEarnManagerInstructionAccounts,
  args: RemoveEarnManagerInstructionArgs,
  programId = new web3.PublicKey('MzeRokYa9o1ZikH6XHRiSS5nD8mNjZyHpLCBRTBSY4c')
) {
  const [data] = removeEarnManagerStruct.serialize({
    instructionDiscriminator: removeEarnManagerInstructionDiscriminator,
    ...args,
  })
  const keys: web3.AccountMeta[] = [
    {
      pubkey: accounts.signer,
      isWritable: false,
      isSigner: true,
    },
    {
      pubkey: accounts.globalAccount,
      isWritable: false,
      isSigner: false,
    },
    {
      pubkey: accounts.earnManagerAccount,
      isWritable: true,
      isSigner: false,
    },
  ]

  if (accounts.anchorRemainingAccounts != null) {
    for (const acc of accounts.anchorRemainingAccounts) {
      keys.push(acc)
    }
  }

  const ix = new web3.TransactionInstruction({
    programId,
    keys,
    data,
  })
  return ix
}
