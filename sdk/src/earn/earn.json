{
  "version": "0.1.0",
  "name": "earn",
  "constants": [
    {
      "name": "EARNER_SEED",
      "type": "bytes",
      "value": "[101, 97, 114, 110, 101, 114]"
    },
    {
      "name": "EARN_MANAGER_SEED",
      "type": "bytes",
      "value": "[101, 97, 114, 110, 45, 109, 97, 110, 97, 103, 101, 114]"
    },
    {
      "name": "GLOBAL_SEED",
      "type": "bytes",
      "value": "[103, 108, 111, 98, 97, 108]"
    },
    {
      "name": "TOKEN_AUTHORITY_SEED",
      "type": "bytes",
      "value": "[116, 111, 107, 101, 110, 95, 97, 117, 116, 104, 111, 114, 105, 116, 121]"
    }
  ],
  "instructions": [
    {
      "name": "initialize",
      "accounts": [
        {
          "name": "admin",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "globalAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "mint",
          "type": "publicKey"
        },
        {
          "name": "earnAuthority",
          "type": "publicKey"
        },
        {
          "name": "initialIndex",
          "type": "u64"
        },
        {
          "name": "claimCooldown",
          "type": "u64"
        }
      ]
    },
    {
      "name": "setEarnAuthority",
      "accounts": [
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "globalAccount",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "newEarnAuthority",
          "type": "publicKey"
        }
      ]
    },
    {
      "name": "setEarnerRecipient",
      "accounts": [
        {
          "name": "admin",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "globalAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "earnerAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "recipientTokenAccount",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        }
      ],
      "args": []
    },
    {
      "name": "propagateIndex",
      "accounts": [
        {
          "name": "signer",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "globalAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "mint",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "index",
          "type": "u64"
        },
        {
          "name": "earnerMerkleRoot",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        },
        {
          "name": "earnManagerMerkleRoot",
          "type": {
            "array": [
              "u8",
              32
            ]
          }
        }
      ]
    },
    {
      "name": "claimFor",
      "accounts": [
        {
          "name": "earnAuthority",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "globalAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "mint",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenAuthorityAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "userTokenAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "earnerAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "tokenProgram",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "mintMultisig",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "earnManagerAccount",
          "isMut": false,
          "isSigner": false,
          "isOptional": true
        },
        {
          "name": "earnManagerTokenAccount",
          "isMut": true,
          "isSigner": false,
          "isOptional": true
        }
      ],
      "args": [
        {
          "name": "snapshotBalance",
          "type": "u64"
        }
      ]
    },
    {
      "name": "completeClaims",
      "accounts": [
        {
          "name": "earnAuthority",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "globalAccount",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "addEarner",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "earnManagerAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "globalAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "userTokenAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "earnerAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "user",
          "type": "publicKey"
        },
        {
          "name": "proofs",
          "type": {
            "vec": {
              "vec": {
                "defined": "ProofElement"
              }
            }
          }
        },
        {
          "name": "neighbors",
          "type": {
            "vec": {
              "array": [
                "u8",
                32
              ]
            }
          }
        }
      ]
    },
    {
      "name": "removeEarner",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "earnerAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "earnManagerAccount",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": []
    },
    {
      "name": "configureEarnManager",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "globalAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "earnManagerAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "feeTokenAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "feeBps",
          "type": "u64"
        },
        {
          "name": "proof",
          "type": {
            "vec": {
              "defined": "ProofElement"
            }
          }
        }
      ]
    },
    {
      "name": "addRegistrarEarner",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "globalAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "userTokenAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "earnerAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "systemProgram",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "user",
          "type": "publicKey"
        },
        {
          "name": "proof",
          "type": {
            "vec": {
              "defined": "ProofElement"
            }
          }
        }
      ]
    },
    {
      "name": "removeRegistrarEarner",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "globalAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "earnerAccount",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "proofs",
          "type": {
            "vec": {
              "vec": {
                "defined": "ProofElement"
              }
            }
          }
        },
        {
          "name": "neighbors",
          "type": {
            "vec": {
              "array": [
                "u8",
                32
              ]
            }
          }
        }
      ]
    },
    {
      "name": "removeEarnManager",
      "accounts": [
        {
          "name": "signer",
          "isMut": false,
          "isSigner": true
        },
        {
          "name": "globalAccount",
          "isMut": false,
          "isSigner": false
        },
        {
          "name": "earnManagerAccount",
          "isMut": true,
          "isSigner": false
        }
      ],
      "args": [
        {
          "name": "earnManager",
          "type": "publicKey"
        },
        {
          "name": "proofs",
          "type": {
            "vec": {
              "vec": {
                "defined": "ProofElement"
              }
            }
          }
        },
        {
          "name": "neighbors",
          "type": {
            "vec": {
              "array": [
                "u8",
                32
              ]
            }
          }
        }
      ]
    },
    {
      "name": "removeOrphanedEarner",
      "accounts": [
        {
          "name": "signer",
          "isMut": true,
          "isSigner": true
        },
        {
          "name": "earnerAccount",
          "isMut": true,
          "isSigner": false
        },
        {
          "name": "earnManagerAccount",
          "isMut": false,
          "isSigner": false
        }
      ],
      "args": []
    }
  ],
  "accounts": [
    {
      "name": "EarnManager",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "isActive",
            "type": "bool"
          },
          {
            "name": "feeBps",
            "type": "u64"
          },
          {
            "name": "feeTokenAccount",
            "type": "publicKey"
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    },
    {
      "name": "Earner",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "earnManager",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "recipientTokenAccount",
            "type": {
              "option": "publicKey"
            }
          },
          {
            "name": "lastClaimIndex",
            "type": "u64"
          },
          {
            "name": "lastClaimTimestamp",
            "type": "u64"
          },
          {
            "name": "isEarning",
            "type": "bool"
          },
          {
            "name": "bump",
            "type": "u8"
          },
          {
            "name": "user",
            "type": "publicKey"
          },
          {
            "name": "userTokenAccount",
            "type": "publicKey"
          }
        ]
      }
    },
    {
      "name": "Global",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "admin",
            "type": "publicKey"
          },
          {
            "name": "earnAuthority",
            "type": "publicKey"
          },
          {
            "name": "mint",
            "type": "publicKey"
          },
          {
            "name": "index",
            "type": "u64"
          },
          {
            "name": "timestamp",
            "type": "u64"
          },
          {
            "name": "claimCooldown",
            "type": "u64"
          },
          {
            "name": "maxSupply",
            "type": "u64"
          },
          {
            "name": "maxYield",
            "type": "u64"
          },
          {
            "name": "distributed",
            "type": "u64"
          },
          {
            "name": "claimComplete",
            "type": "bool"
          },
          {
            "name": "earnerMerkleRoot",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "earnManagerMerkleRoot",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "bump",
            "type": "u8"
          }
        ]
      }
    }
  ],
  "types": [
    {
      "name": "ProofElement",
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "node",
            "type": {
              "array": [
                "u8",
                32
              ]
            }
          },
          {
            "name": "onRight",
            "type": "bool"
          }
        ]
      }
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "AlreadyClaimed",
      "msg": "Already claimed for user."
    },
    {
      "code": 6001,
      "name": "ExceedsMaxYield",
      "msg": "Rewards exceed max yield."
    },
    {
      "code": 6002,
      "name": "NotAuthorized",
      "msg": "Invalid signer."
    },
    {
      "code": 6003,
      "name": "InvalidParam",
      "msg": "Invalid parameter."
    },
    {
      "code": 6004,
      "name": "AlreadyEarns",
      "msg": "User is already an earner."
    },
    {
      "code": 6005,
      "name": "NoActiveClaim",
      "msg": "There is no active claim to complete."
    },
    {
      "code": 6006,
      "name": "NotEarning",
      "msg": "User is not earning."
    },
    {
      "code": 6007,
      "name": "RequiredAccountMissing",
      "msg": "An optional account is required in this case, but not provided."
    },
    {
      "code": 6008,
      "name": "InvalidAccount",
      "msg": "Account does not match the expected key."
    },
    {
      "code": 6009,
      "name": "NotActive",
      "msg": "Account is not currently active."
    },
    {
      "code": 6010,
      "name": "InvalidProof",
      "msg": "Merkle proof verification failed."
    }
  ]
}