// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";

export class TokenBalanceUpdate {
  static encode(message: TokenBalanceUpdate, writer: Writer): void {
    writer.uint32(10);
    writer.string(message.pubkey);

    writer.uint32(18);
    writer.string(message.mint);

    writer.uint32(26);
    writer.string(message.owner);

    writer.uint32(32);
    writer.uint64(message.preBalance);

    writer.uint32(40);
    writer.uint64(message.postBalance);
  }

  static decode(reader: Reader, length: i32): TokenBalanceUpdate {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new TokenBalanceUpdate();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.pubkey = reader.string();
          break;

        case 2:
          message.mint = reader.string();
          break;

        case 3:
          message.owner = reader.string();
          break;

        case 4:
          message.preBalance = reader.uint64();
          break;

        case 5:
          message.postBalance = reader.uint64();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  pubkey: string;
  mint: string;
  owner: string;
  preBalance: u64;
  postBalance: u64;

  constructor(
    pubkey: string = "",
    mint: string = "",
    owner: string = "",
    preBalance: u64 = 0,
    postBalance: u64 = 0
  ) {
    this.pubkey = pubkey;
    this.mint = mint;
    this.owner = owner;
    this.preBalance = preBalance;
    this.postBalance = postBalance;
  }
}
